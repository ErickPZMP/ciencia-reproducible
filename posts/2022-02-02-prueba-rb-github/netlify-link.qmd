---
title: "Enlazar Github con Netlify para publicar"
description: "Preparación del vínculo entre Github y Netlify para publicación en automático"
author:
  - name: [Miguel Equihua]
    url: https://www.ie-gamma.net
date: 3/jul/2024
categories: [taller, github, netlify]
format: 
  html:
    toc: true
lightbox: true
---


## Preparación

Supondré que ya has obtenido tus cuentas de _Github_ y _Netlify_. En todo caso y por si las dudas estos dos enlaces te deben ayudar.

::: {.callout-tip collapse="true"}
## Enlaces inicio Github y Netlify
[Github](https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F&source=header-home)

[Netlify](https://www.netlify.com/)
:::

::: {layout="[1,1]"}

Ya tenemos un proyecto _Quarto_ en _Rstudio_, al que podemos agregar la funcionalidad de control de versiones mediante _Git_. Por otro lado, también podemos iniciar un nuevo proyecto que desde un inicio tenga esta característica, la [forma e hacerlo está aquí](primeros-pasos.qmd). Si prefieres el camino de agregar _Git_ a tu proyecto ya existente habrá que agregarlo. Para saber si está _Git_ habilitado basta con averiguar si tienes la pestaña respectiva en el cuadrante de _ambiente de trabajo_ de _RStudio_ (arriba a la izquierda normalmente)

![](img/cuadrante-ambiente.png)
:::




::: {.callout-tip collapse="true"}
## Agregar control de versiones a tu proyecto

### Camino A: usando el menu

![](img/agregar-git-proyecto.png)

### Camino B: usando comandos

1. Asegúrate de tener instalada la biblioteca `usethis`
2. Ejecuta el siguiente comando en _R_ y responde las preguntas que aparecerán en la consola

```r
usethis::use_git()

```

### Agregar el nuevo repositorio a Github

Lo más sencillo es de nuevo usar la biblioteca de ayuda `usethis`. En la consola ejecuta el siguiente comando

```r

usethis::use_github()

```

Lo que ocurre con este comando es lo siguiente:

1. Crearás un nuevo _repositorio en GitHub_ con el mismo nombre de tu proyecto.
2. Configurarás el nuevo _repo_ como el _origin_ remoto para tu _repo_ local.
3. Prepararás una rama local inicial a la que nombrarás **main** y sobre la que se harás el seguimiento hasta nueva orden. 
4. Sincronizarás lo que tengas en tu máquina con _Github_.
4. Abrirás el nuevo repositorio en el navegador para que puedas ver lo que has hecho.

Casi tan simple como lo que acabamos de hacer es utilizar _Google Desktop_ para crear un _repo_ en tu cuenta, con base en un proyecto de tu máquina. Asegúrate de hacer las tareas 3 y 4 anotadas arriba.

![](img/github-desktop.png)

De ahora en adelante puedes tomar registro de tu avance de trabajo, involucrando todos los directorios de tu proyecto (salvo lso que estén en `.gitignore`), cada vez que lo consideres conveniente. También podrás sincronizar este registro con el repositorio que has creado en _Github_ cuando te parezca prudente. Toma nota de que nada de esto ocurrirá automáticamente, deberás generar la indicación cada vez que quieras que ocurra.



:::


