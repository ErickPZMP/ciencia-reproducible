[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Blog de Reproducibilidad Científica",
    "section": "",
    "text": "Este es un espacio para conversar sobre Ciencia Reproducible. La figura ilustra los pilares de la reproducibilidad de acuerdo con lo expresado en este artículo de González-Rayas, et al., 2020"
  },
  {
    "objectID": "posts/diapos-ciencia-abierta/index.html#comunidades-de-aprendizaje",
    "href": "posts/diapos-ciencia-abierta/index.html#comunidades-de-aprendizaje",
    "title": "Ciencia abierta",
    "section": "",
    "text": "El Pacto del Contribuyente.\nExpone ideas y conceptos que hacen la convivencia grata y productiva.\nEl espíritu de este documento reflexiona sobre lo que estaremos haciendo en este taller."
  },
  {
    "objectID": "posts/diapos-ciencia-abierta/index.html#section",
    "href": "posts/diapos-ciencia-abierta/index.html#section",
    "title": "Ciencia abierta",
    "section": "",
    "text": "Pilares de la reproducibilidad de acuerdo con González-Rayas, et al., 2020"
  },
  {
    "objectID": "posts/diapos-ciencia-abierta/index.html#section-1",
    "href": "posts/diapos-ciencia-abierta/index.html#section-1",
    "title": "Ciencia abierta",
    "section": "",
    "text": "Ciclo de investigación y amenazas a la reproducibbilidad"
  },
  {
    "objectID": "posts/diapos-ciencia-abierta/index.html#section-2",
    "href": "posts/diapos-ciencia-abierta/index.html#section-2",
    "title": "Ciencia abierta",
    "section": "",
    "text": "Apertura científica"
  },
  {
    "objectID": "posts/diapos-ciencia-abierta/index.html#gráficos",
    "href": "posts/diapos-ciencia-abierta/index.html#gráficos",
    "title": "Ciencia abierta",
    "section": "Gráficos",
    "text": "Gráficos\n\nDibujos vectoriales\nFotografías e ilustraciones en mapa de bits"
  },
  {
    "objectID": "posts/diapos-ciencia-abierta/index.html#licencias-para-compartir",
    "href": "posts/diapos-ciencia-abierta/index.html#licencias-para-compartir",
    "title": "Ciencia abierta",
    "section": "Licencias para compartir",
    "text": "Licencias para compartir\n\nCreative commons\nCopyleft\nThe MIT License\nDOI"
  },
  {
    "objectID": "posts/diapos-ciencia-abierta/index.html#indautor",
    "href": "posts/diapos-ciencia-abierta/index.html#indautor",
    "title": "Ciencia abierta",
    "section": "Indautor",
    "text": "Indautor\nPuedes visitar en México el Instituto Nacional del Derecho de Autor para obtener más información."
  },
  {
    "objectID": "posts/2024-05-26-taller/index.html",
    "href": "posts/2024-05-26-taller/index.html",
    "title": "Una Nueva Manera de Escribir",
    "section": "",
    "text": "Curso-taller para iniciarse en las habilidades que promueve la ciencia abierta. La apertura invita a ampliar la colaboración, pero también la eficacia con la que se colabora Hay mucho que ya se puede hacer con el apoyo de Dropbox®, GoogleDocs® y con las mismas aplicaciones de Microsoft® ¿Qué significa que esto esté ocurriendo? ¿Qué implicaciones podría tener sobre la forma como se hace y comunica la ciencia?\nEl curso-taller se propone acercar al estudiante a la increíble evolución mundial de las capacidades de cómputo y de comunicación que ya está en marcha. No sólo porque cada vez hay mayores facilidades para colaborar, sino por la capacidad actual para producir documentos que combinan el texto con el procesamiento estadístico de datos y las gráficas resultantes. El que la secuencia completa datos→análisis→texto se pueda unificar, da todo un nuevo significado al proceso de comunicación en favor de la reproducibilidad científica.\nLos estudiantes aprenderán a producir reportes académicos en distintos formatos: páginas web, documentos tipo Word®, PDF, carteles, presentaciones e incluso artículos o libros. Todo esto sin que se requiera un conocimiento previo de R o RStudio. Lo haremos paso a paso y con un enfoque de manos a la obra. El estudiante podrá elegir los materiales, datos y textos que le interese ensayar.\nLas actividades se desarrollarán a lo largo de 4 semanas teórico prácticas. Habrá sesiones presenciales de 3 horas martes y jueves. El resto de la semana el estudiante desarrollará actividades a su paso, con un carga de trabajo que se estima requerirá 9 horas adicionales cada semana."
  },
  {
    "objectID": "posts/2024-05-26-taller/index.html#temario",
    "href": "posts/2024-05-26-taller/index.html#temario",
    "title": "Una Nueva Manera de Escribir",
    "section": "Temario",
    "text": "Temario\nEl curso-taller abordará los siguientes temas:\n\nTematica 1\n\n¿Ciencia abierta y reproducibilidad?\nEl proceso científico abierto\nEscribir en RStudio\n\nmarkdown\nQuarto\npandoc\necuaciones Latex\n\n\nTematica 2\n\nLeer datos desde distintos orígenes: Excel®, Google Sheets®, OneCloud®\nColaboración y control de versiones\nPublicación en línea.\nProducción de textos en diversos formatos:\n\nhtml\ndocx\npptx\npdf\n\n\nTematica 3\n\nDiapositivas para presentaciones Web\n\nTematica 4\n\nOrganización de múltiples documentos\n\nSitio Web\nBlog\n\n\nTematica 5\n\nProducción científica\n\nLibros\nManuscritos"
  },
  {
    "objectID": "posts/2024-05-26-taller/index.html#actividades-presenciales",
    "href": "posts/2024-05-26-taller/index.html#actividades-presenciales",
    "title": "Una Nueva Manera de Escribir",
    "section": "Actividades presenciales",
    "text": "Actividades presenciales\nLas sesiones presenciales se llevarán a cabo en el Aula 9 (por confirmar). Se desarrollarán de 10-13hrs de acuerdo con el siguiente calendario.\n\n\n\n\nCalendarioTemáticaDía 1Día 21.0martes 18 de juniojueves 20 de junio2.0martes 25 de juniojueves 27 de junio3.0miércoles 03 de juliojueves 04 de julio3.1viernes 05 de julio4.0martes 09 de juliomiércoles 10 de julio5.0martes 06 de agostojueves 08 de agosto"
  },
  {
    "objectID": "posts/2024-05-26-taller/index.html#requisitos-previos",
    "href": "posts/2024-05-26-taller/index.html#requisitos-previos",
    "title": "Una Nueva Manera de Escribir",
    "section": "Requisitos previos",
    "text": "Requisitos previos\nEl estudiante tiene familiaridad con el uso de computadoras y el uso de Internet. Para algunas de las actividades será provechoso tener cuentas activas en los servicios en línea Github (como sistema de control de versiones) y Netlify (para publicar blogs y sitios web personales). El estudiante tendrá que generar su cuenta personal en cada uno de estos servicios. Se recomienda hacerlo con antelación.\n\nAlta en Github.\nAlta en Netlify.\n\nPara las actividades en clase se espera que tendrá ya instalado en su máquina el sistema de control de versiones Git (se sugiere utiliizar Github Desktop), el interprete del lenguaje de computo R y la interface de desarrollo RStudio. Las instrucciones para estos dós últimos están aquí, en el caso de ambiente MS-Windows® pueden usarse los siguientes enlaces:\n\nInstalar Github Desktop\nInstalar R\nInstalar RStudio\n\nSi interesa verificar la publicación Web de documentos hay que prever que no estén bloqueados en el Firewall de la institución los sitios con terminación .netlify.app, pues es la que utilizará el servicio Netlify por defecto.\nQuarto es un sistema de fuente abierta para la autoría de documentos científicos y técnicos. Puedes aprender más sobre lo que ofrece Quarto en este enlace.\nLa construcción de comunidades de aprendizaje requiere compartir intereses y actitudes. Al respecto pongo a su consideración el Pacto del Contribuyente, que busca exponer ideas y conceptos que hace la convivencia grata y productiva. Pienso que el espíritu de este documento es muy adecuado para estimular la reflexión que buscamos propicie lo que estaremos haciendo en este taller."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/primeros-pasos.html",
    "href": "posts/2022-02-02-prueba-rb-github/primeros-pasos.html",
    "title": "Primeros pasos con Git",
    "section": "",
    "text": "Es una aplicación diseñada por el iniciador del desarrollo de Linux Linus Torvalds. Git es un sistema eficiente confiable y distribuido de control de versiones. El control de versiones es simplemente el seguimiento y registro de los cambios que va teniendo un documento a lo largo del tiempo. El concepto distribuido se refiere a que el registro local que tengas en tu máquina o para el caso en cualquier número de máquinas, es un registro completo, clonado del proyecto. Estos repositorios locales plenamente funcionales permiten trabajar aún cuando no tengas acceso a Internet. Los autores realizan y registran su trabajo localmente y, cuando lo encuentren conveniente, sincronizan la copia local del repositorio con la del servidor. En la actualidad Git se ha convertido en el estándar mundial de facto para el control de versiones.\nUna forma muy sencilla de instalar Git, incluyendo un auxiliar gráfico, es recurrir a Github desktop. Otra forma es recurrir, si tu sistema operativo es Windows, a Git for windows, que no incluye nada más que la plataforma básica de control de versiones. En todo caso, el prerrequisito es contar con alguna instalación de Git en el sistema, para poderlo utilizar desde RStudio. Para utilizarlo, podemos auxiliarnos con la biblioteca usethis, que ofrece una amplia batería de comandos para interactuar con la plataforma de Git y con el servicio de Internet Github.\nEn RStudio hay ayuda para utilizar Git directamente. Para acceder a este apoyo deberás crear un proyecto que incluya el control de versiones como una característica activa. En la figura se ilustran las dos rutas para hacerlo en RStudio.\n\nEvidentemete, si seguiste la ruta azul, tu repositorio ya existe en Github. Si optaste por la ruta verde, entonces deberás crear un repositorio allá. Parar hacerlo hay tres sencillos pasos adicionales que dar.\n\n\n\n\n\n\n\n\n\nDefinir la rama principal (se sugiere main, aunque también se usa master).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHaz un commit seleccionando todos los archivos que aparecen en la pestaña Git. Los puedes comentar anotado “inicial” o algo sugerente de ser el primer control registrado en el repositorio del proyecto.\n\n\n\n\n\n\n\n\n\n\nVincula tu repositorio local con un nuevo repositorio en Github. La forma más sencilla de hacer esto con RStudio es escribir, en la pestaña de Consola el comando de R:\n\nusethis::use_github()\nUna vez que todo está preparado la rutina de trabajo incluye hacer commit cada vez que convenga preservar alguna versión. De vez en cuando sincronizar con la copia maestra del rerpositorio en Github, primero obteniendo el estado actual con el comando pull y luego enviando la versión de tu equipo local con un push."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/primeros-pasos.html#qué-es-git",
    "href": "posts/2022-02-02-prueba-rb-github/primeros-pasos.html#qué-es-git",
    "title": "Primeros pasos con Git",
    "section": "",
    "text": "Es una aplicación diseñada por el iniciador del desarrollo de Linux Linus Torvalds. Git es un sistema eficiente confiable y distribuido de control de versiones. El control de versiones es simplemente el seguimiento y registro de los cambios que va teniendo un documento a lo largo del tiempo. El concepto distribuido se refiere a que el registro local que tengas en tu máquina o para el caso en cualquier número de máquinas, es un registro completo, clonado del proyecto. Estos repositorios locales plenamente funcionales permiten trabajar aún cuando no tengas acceso a Internet. Los autores realizan y registran su trabajo localmente y, cuando lo encuentren conveniente, sincronizan la copia local del repositorio con la del servidor. En la actualidad Git se ha convertido en el estándar mundial de facto para el control de versiones.\nUna forma muy sencilla de instalar Git, incluyendo un auxiliar gráfico, es recurrir a Github desktop. Otra forma es recurrir, si tu sistema operativo es Windows, a Git for windows, que no incluye nada más que la plataforma básica de control de versiones. En todo caso, el prerrequisito es contar con alguna instalación de Git en el sistema, para poderlo utilizar desde RStudio. Para utilizarlo, podemos auxiliarnos con la biblioteca usethis, que ofrece una amplia batería de comandos para interactuar con la plataforma de Git y con el servicio de Internet Github.\nEn RStudio hay ayuda para utilizar Git directamente. Para acceder a este apoyo deberás crear un proyecto que incluya el control de versiones como una característica activa. En la figura se ilustran las dos rutas para hacerlo en RStudio.\n\nEvidentemete, si seguiste la ruta azul, tu repositorio ya existe en Github. Si optaste por la ruta verde, entonces deberás crear un repositorio allá. Parar hacerlo hay tres sencillos pasos adicionales que dar.\n\n\n\n\n\n\n\n\n\nDefinir la rama principal (se sugiere main, aunque también se usa master).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHaz un commit seleccionando todos los archivos que aparecen en la pestaña Git. Los puedes comentar anotado “inicial” o algo sugerente de ser el primer control registrado en el repositorio del proyecto.\n\n\n\n\n\n\n\n\n\n\nVincula tu repositorio local con un nuevo repositorio en Github. La forma más sencilla de hacer esto con RStudio es escribir, en la pestaña de Consola el comando de R:\n\nusethis::use_github()\nUna vez que todo está preparado la rutina de trabajo incluye hacer commit cada vez que convenga preservar alguna versión. De vez en cuando sincronizar con la copia maestra del rerpositorio en Github, primero obteniendo el estado actual con el comando pull y luego enviando la versión de tu equipo local con un push."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Por una Ciencia Reproducible",
    "section": "",
    "text": "Merge request o ¡Acepta mi contribución!\n\n\n\n\n\n\ntaller\n\n\ngithub\n\n\n\n\n\n\n\n\n\nXalapa, Ver., 6 de julio, 2024\n\n\nundefined undefined\n\n\n\n\n\n\n\n\n\n\n\n\nPublicar desde RStudio\n\n\n\n\n\n\ntaller\n\n\ngithub\n\n\nnetlify\n\n\n\nRutina de publicación fluida: Rstudio &gt; Github &gt; Netlify\n\n\n\n\n\nXalapa, Ver., 5 de julio, 2024\n\n\nundefined undefined\n\n\n\n\n\n\n\n\n\n\n\n\nEnlazar Github con Netlify para publicar\n\n\n\n\n\n\ntaller\n\n\ngithub\n\n\nnetlify\n\n\n\nPreparación del vínculo entre Github y Netlify para publicación en automático\n\n\n\n\n\nXalapa, Ver., 3 de julio, 2024\n\n\nundefined undefined\n\n\n\n\n\n\n\n\n\n\n\n\nPrimeros pasos con Git\n\n\n\n\n\n\ntaller\n\n\ngithub\n\n\n\n\n\n\n\n\n\nXalapa, Ver., 3 de julio, 2024\n\n\nundefined undefined\n\n\n\n\n\n\n\n\n\n\n\n\nCiencia abierta\n\n\n\n\n\n\npresentación\n\n\nconceptos\n\n\npropuestas\n\n\n\n\n\n\n\n\n\nXalapa, Ver., 20 de junio, 2024\n\n\nMiguel Equihua\n\n\n\n\n\n\n\n\n\n\n\n\nPizzas\n\n\n\n\n\n\ntaller\n\n\n\n\n\n\n\n\n\nXalapa, Ver., 20 de junio, 2024\n\n\nMiguel Equihua\n\n\n\n\n\n\n\n\n\n\n\n\nUna Nueva Manera de Escribir\n\n\n\n\n\n\ntaller\n\n\n\n\n\n\n\n\n\nXalapa, Ver., 18 de junio, 2024\n\n\nMiguel Equihua\n\n\n\n\n\n\n\n\n\n\n\n\nEscritura, ciencia y empirismo\n\n\n\n\n\n\npresentación\n\n\nconceptos\n\n\npropuestas\n\n\n\n\n\n\n\n\n\nXalapa, Ver., 18 de junio, 2024\n\n\nMiguel Equihua\n\n\n\n\n\n\n\n\n\n\n\n\nBlog de Reproducibilidad Científica\n\n\n\n\n\n\ninicio\n\n\n\n\n\n\n\n\n\nXalapa, Ver., 11 de junio, 2024\n\n\nMiguel Equihua\n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Acerca de",
    "section": "",
    "text": "Este es un blog de reflexión sobre actitudes que conviene cultivar y formas como se puede escribir para propiciar una ciencia más reproducible"
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/index.html",
    "href": "posts/2022-02-02-prueba-rb-github/index.html",
    "title": "Publicar desde RStudio",
    "section": "",
    "text": "Desde luego ya debes tener preparado Git en tu máquina y una cuenta en Github. Si requieres realizar estos primeros pasos te sugiero ir a esta contribución.\n\n\n\n\n\n\nSimplemente hay que crear o clonar un repositorio en Github (o algún otro servicio semejante) y asegurarse de trabajar con vinculación a ese repositorio. Esto es muy cómodo hacerlo con Github Desktop. RStudio debería reconocer la configuración en forma automática, incluyendo las credenciales usadas para acceder al repositorio, que habrán sido registradas por Git en la referencia al repositorio base que se suele etiquetar como origin."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/index.html#colaboración",
    "href": "posts/2022-02-02-prueba-rb-github/index.html#colaboración",
    "title": "Publicar desde RStudio",
    "section": "Colaboración",
    "text": "Colaboración\nLa forma más segura de interactuar con un repositorio es mediante pull request (solicitud de incorporación). Esta acción es una petición que hace el propietario de una copia del repositorio (fork), al propietario del repositorio original para que incorpore los commits que están en la copia del solicitante. Para ver como hacer preparamos esta contribución al respecto."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/pull-request.html",
    "href": "posts/2022-02-02-prueba-rb-github/pull-request.html",
    "title": "Merge request o ¡Acepta mi contribución!",
    "section": "",
    "text": "Un Pull request en Git podríamos llamarlo una Solicitud de Fusión, aunque lo común es usar la frase en inglés. Es la base del uso de un repositorio Git como plataforma de colaboración además del control de versiones. Es el mecanismo seguro de solicitar la incorporación de cambios al proyecto. La ideas es tan simple como el nombre indica: se solicita al responsable del proyecto que incorpore una nueva rama (desde un repositorio que tiene cambios propuestos), en otra (del mismo o de otro repositorio).\nCon las peticiones de fusión puedes:\nEn usethis el subconjunto de funciones con el prefijo pr_ se refieren a las operaciones relacionadas con pull requests en Github. Encontraras más información en Happy Git.\nUna solicitud de fusión involucra a dos participantes, los llamaremos: contribuyente y revisor. Como las funciones pr_ usan la infraestructura interactiva de Github (API) Necesitaras un token personal de acceso, lo puedes hacer con este código:\nAl ejecutarlo te llevará a la página adecuada para la tarea en Github con la innformación recomendada ya registrada, sólo falta describir el uso que darás al token y la caducidad que prefieres. Copia el token y registralo en forma segura en RStudio"
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/pull-request.html#copiar-y-clonar-localmente",
    "href": "posts/2022-02-02-prueba-rb-github/pull-request.html#copiar-y-clonar-localmente",
    "title": "Merge request o ¡Acepta mi contribución!",
    "section": "Copiar y clonar localmente",
    "text": "Copiar y clonar localmente\nPara empezar a colaborar, lo primero es quue cada participante tenga suu propia copia (fork) del proyecto. Esto se puede hacer con la instrucción siguiente:\nusethis::create_from_github(\"equihuam/ciencia-reproducible\")\nEste comando hará lo siguiente:\n\nUna copia del repositorio ciencia-reproducible que tengo en mi cuenta personal.\nClonará la copia del repositorio en tu equipo.\nDefinirá el orígen remoto del repositorio vinculado a tuu copia en Github.\nTambién definirá que t copia está vinculada a mi repositorio del mismo nombre.\nConfigura el sistema para viggilar lo que ocurra en la rama principal de mi repositorio.\nAbrir una nueva ventana de RStudio con tu copia clonada.\nAlgunas opciones adicionales en el comando de usethis que podrías querer usar:\n\ncontrola si se debe copiar o no fork = TRUE o fork = FALSE.\nUsa destdir para especifica en donde quieres poner tu clon del repositorio.\nPodrías incluso usar la opción usethis.destdir para que los nuevos proyectos siempre vayan a un directorio específico de tu preferencia."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/pull-request.html#crea-una-rama-y-propon-cambios",
    "href": "posts/2022-02-02-prueba-rb-github/pull-request.html#crea-una-rama-y-propon-cambios",
    "title": "Merge request o ¡Acepta mi contribución!",
    "section": "Crea una rama y propon cambios",
    "text": "Crea una rama y propon cambios\nPara crear tu propuesta de cambio puedes usar la función pr_init() que crea una rama nueva en tu repositorio en preparación para hacer la solicitud de incorporación de cambios. Es buena práctica hacerlo así, en lugar de usar la rama principal (comunmente main o master). En este caso llamaremos a la rama nueva idea-1\nusethis::pr_init(branch = \"idea-1\")\nLa ejecución de este comando crea la rama y la hace el espacio activo de trabajo. Ahora puedes hacer todo el trabajo que gustes, hacer tus commits en esta rama y demás.\nCuando estés lista para enviar tu contribución con las adecuaciones y cambios que deseas proponer usa el siguiente comando.\nusethis::pr_push()\nLa ejecución del comando hará que se presente un ventana de tu navegador de Internet en la URL (Uniform Resource Locator) de interés. En la ventana podrás ver una comparación de lo que hay en el repositorio original (izquierda) y los cambios que propones (derecha). También verás un gran botón verde que dice Create Pull Request. Si estás lista, apriétalo para enviar la solicitud a la consideración del responsable. Al apretar el botón tendrás opción de indicar si es un borrador o una propuesta terminada. En el primer caso, no olvides marcarla como lista para ser revisada cuando hayas terminado de trabajarla y la consideres completa, momento en el que habrás de lanzar un nuevo pr_push()\nGitHub enviará un mensaje al responsable, quien revisará tu solicitud. Podrás ver lo que está pasando con la instrucción:\nusethis::pr_view()\nTe llevará a la página adecuada en tu navegador de Internet en donde se está dando segimientto a tu petición.\nEn el proceso de revisión el responsable decidirá en algún momento llevar tu propuesta a su máquina. Lo podrá hacer con la instrucción\nusethis::pr_fetch()\nAl ejecutar este comando se crea una nueva rama en el equipo del responsable con uun identificador que incluye el dato del usuario que remite la contribución. Una vez que está satisfecho con el contenido, que pdo haber ajustado según su perspectiva, deberá emitir un nuevo push:\nusethis::pr_push()\nque actualizará los cambios con sus sugerencias. Cuando todo se valora está en orden, el responsable emitirá la orden de incorporar los cambios y dar por terminado el proceso. Lo puede hacer con las siguiente instrucción.\nusethis::pr_finish()\nPara poner tu copia del repositorio al día deberás emitir una penúltima instrucción\nusethis::pr_pull()\nque incorporará la versión final de los cambios en tu copia del repositorio. Finalmente, podrás cerrar el proceso desde tu lado con:\nusethis::pr_finish()\nlo que dará por terminado el proceso.\nPuedes encontrar este texto útil para obtener más información sobbre el tema."
  },
  {
    "objectID": "posts/algunas-diapos/La escritura.html#irene-vallejo",
    "href": "posts/algunas-diapos/La escritura.html#irene-vallejo",
    "title": "Escritura, ciencia y empirismo",
    "section": "Irene Vallejo",
    "text": "Irene Vallejo"
  },
  {
    "objectID": "posts/algunas-diapos/La escritura.html#escribir",
    "href": "posts/algunas-diapos/La escritura.html#escribir",
    "title": "Escritura, ciencia y empirismo",
    "section": "Escribir",
    "text": "Escribir\nSocrates no es el único gran pensador que, en la encrucijada de la comunicación, se abstuvo de escribir. Como él, Pitágoras, Diógenes, Buda y Jesús de Nazaret optaron por la oralidad. No obstante, todos ellos sabían leer y dominaban la escritura."
  },
  {
    "objectID": "posts/algunas-diapos/La escritura.html#leer-y-saber",
    "href": "posts/algunas-diapos/La escritura.html#leer-y-saber",
    "title": "Escritura, ciencia y empirismo",
    "section": "Leer y saber",
    "text": "Leer y saber\nEl dios Theuth de Egipto, inventor de los dados, el juego de damas, los números, la geometría, la astronomía y las letras, visitó al rey de Egipto y le ofreció estas invenciones para que las enseñase a sus súbditos.\nSócrates habla: «EI rey Thamus le preguntó entonces qué utilidad tenía escribir, y Theuth le replicó:\n\n—Este conocimiento, ¡oh rey!,hará más sabios a los egipcios; es el elixir de la memoria y de la sabiduría.\n\nEntonces Thamus le dijo:\n\n—iOh Theuth!, por ser el padre de la escritura le atribuyes ventajas que no tiene. Es olvido lo que producirán las letras en quienes las aprendan, al descuidar la memoria, ya que, fiándose de los libros, llegarán al recuerdo desde fuera. Será, por tanto, la apariencia de la sabiduría, no su verdad, 1o que la escritura dará a los hombres; y, cuando haya hecho de ellos entendidos en todo sin verdadera instrucción, su compañía será difícil de soportar, porque se creerán sabios en lugar de serlo»."
  },
  {
    "objectID": "posts/algunas-diapos/La escritura.html#narrar-y-escribir",
    "href": "posts/algunas-diapos/La escritura.html#narrar-y-escribir",
    "title": "Escritura, ciencia y empirismo",
    "section": "Narrar y Escribir",
    "text": "Narrar y Escribir\n\nFrente a la oralidad, que favorecía las formas e ideas tradicionales, reconocibles para su auditorio, eI discurso alfabetizado podía abrirse a horizontes desconocidos porque el lector tenía tiempo para asimilar y meditar con tranquilidad las ideas novedosas. En los libros caben planteamientos excéntricos, voces de identidades individuales, desafíos a la tradición."
  },
  {
    "objectID": "posts/algunas-diapos/La escritura.html#el-alfabeto",
    "href": "posts/algunas-diapos/La escritura.html#el-alfabeto",
    "title": "Escritura, ciencia y empirismo",
    "section": "El alfabeto",
    "text": "El alfabeto\nEl inventor del alfabeto vivió en el siglo VIII a. C., hace veintinueve siglos. Cambió mi mundo.\nLe fascinaba sobre todo era un talento de los marinos en apariencia humilde y sin épica. ¿Cómo podían escribir tan deprisa unos sencillos mercaderes?"
  },
  {
    "objectID": "posts/algunas-diapos/La escritura.html#comprar-las-letras",
    "href": "posts/algunas-diapos/La escritura.html#comprar-las-letras",
    "title": "Escritura, ciencia y empirismo",
    "section": "Comprar las letras",
    "text": "Comprar las letras\nPosiblemente pagándoles de su propia bolsa consiguió que le revelaran el secreto. EI lugar donde sucedieron los encuentros probablemente fuera una isla (las mejores candidatas son Tera, Melos y Chipre) o incluso la costa libanesa (como, por ejemplo, el puerto de Al Mina, donde los mercaderes eubeos estaban en trato constante con los fenicios). Aprendió de sus improvisados maestros la mágica herramienta que permitía atrapar la huella de las infinitas palabras con solo veintidós simples dibujos. Supo apreciar la audacia del invento. Al mismo tiempo, descubrió que la escritura fenicia contenía acertijos: solo se anotaban las consonantes de cada sílaba, dejando al lector la tarea de adivinar las vocales. Los fenicios habían sacrificado la exactitud en aras de una mayor facilidad."
  },
  {
    "objectID": "posts/algunas-diapos/La escritura.html#el-modelo-fenicio",
    "href": "posts/algunas-diapos/La escritura.html#el-modelo-fenicio",
    "title": "Escritura, ciencia y empirismo",
    "section": "El modelo fenicio",
    "text": "El modelo fenicio\nA partir del modelo fenicio, él inventó, para su lengua griega, eI primer alfabeto de la historia sin ambigüedades —tan preciso como una partitura—. Comenzó por adaptar en torno a quince signos fenicios consonánticos en su mismo orden, con un nombre parecido (aleph, bet, gimel.se convirtieron en «alfa», «beta», «gamma»…). Tomó letras que no eran útiles para su lengua, las llamadas consonantes débiles, y usó sus signos para las cinco vocales que como mínimo se requerían. Solo fue innovador allí donde se vio capaz de mejorar el original. Su logro fue enorme. Gracias a él se difundió en Europa un alfabeto mejorado, con todas las ventajas del hallazgo fenicio y un nuevo avance añadido: la lectura dejó de estar sujeta a conjetura y, por tanto, se volvió todavía más accesible. Imaginemos cómo sería leer esta frase sin vocales: mgnms cm sr Ir st frs sn vcls. Pensemos por un instante en la dificultad de identificar la palabra «idea» a partir de la consonante «D», o «aéreo» desde tan solo una «R»."
  },
  {
    "objectID": "posts/algunas-diapos/La escritura.html#escribir-y-la-importancia-de-reflexionar",
    "href": "posts/algunas-diapos/La escritura.html#escribir-y-la-importancia-de-reflexionar",
    "title": "Escritura, ciencia y empirismo",
    "section": "Escribir y la importancia de reflexionar",
    "text": "Escribir y la importancia de reflexionar\nSócrates temía que, por culpa de la escritura, los hombres abandonasen el esfuerzo de la propia reflexión. Sospechaba que, gracias al auxilio de las letras, se confiaría el saber a los textos y, sin el empeño de comprenderlos a fondo, bastaría con tenerlos al alcance de la mano. Y así ya no seria sabiduría propia, incorporada a nosotros e indeleble, parte del bagaje de cada uno, sino un apéndice ajeno."
  },
  {
    "objectID": "posts/algunas-diapos/La escritura.html#teoría",
    "href": "posts/algunas-diapos/La escritura.html#teoría",
    "title": "Escritura, ciencia y empirismo",
    "section": "Teoría",
    "text": "Teoría\n\nAristóteles eligió la palabra theoría y el verbo correspondiente theorein, que en griego aluden al acto de mirar algo. Esa elección es muy reveladora: el oficio de pensar eI mundo existe gracias a los libros y la lectura, es decir, cuando podemos ver las palabras, y reflexionar despacio sobre ellas, en lugar de solo oírlas pronunciar en el veloz río del discurso."
  },
  {
    "objectID": "posts/pizzas/index.html",
    "href": "posts/pizzas/index.html",
    "title": "Pizzas",
    "section": "",
    "text": "Para encontrar una mejor manera de hacer su pizza favorita, Marcelo se propuso reducir el tiempo que tarda en preparar la masa. Para hacerlo siguió el camino de la ciencia y diseñó un experimento para poner a prueba el efecto de la cantidad de azúcar y de leche en los tiempos de activación de la levadura. En concreto, probó cuatro recetas diferentes y midió cuántos segundos tardaba la misma cantidad de masa en llenar un recipiente hasta una marca que fijo como referencia. Aleatorizó el orden de las recetas y repitió cada tratamiento 4 veces.\n\n\nDescargar los datos en formato de texto simple o Utiliza este vínculo para otenerlo de Google Drive\n\n\nPueden usar instrucciones parecidas a las que siguen para leer los datos en R, directamente desde un documento en la nube de Google Drive.\n\nlibrary(stringr)\nurl_datos &lt;- \"URL de los datos\"\ndat_datos_id &lt;- str_extract(url_datos, \"(?&lt;=d/)(.*)(?=/view)\")\n\nurl_drive &lt;- \"https://docs.google.com/uc?id=%s&export=download\" \ndatos &lt;- read.csv(sprintf(url_drive, dat_datos_id)) \n\n\n\n¿Diseño experimental?\n¿Arreglo de tratamientos?\n¿Modelo que corresponde a este experimento?\n¿Supuestos qe harás para apoyar tu análisis estadístico?\n¿Define tu criterio o nivel de significancia?\nRealiza una exploración de los datos, numérica y gráfica, comenta\nConstruye los modelos necesarios y selecciona el mínimo adecuado\nValora la calidad del modelo, incluyendo el análisis de los residuos\nResuelve que tratamientos difieren de los demás\nArgumenta tus conclusiones\n\n\n\n\n\nCómo lo abordé yo"
  },
  {
    "objectID": "posts/pizzas/index.html#preparación-de-la-masa",
    "href": "posts/pizzas/index.html#preparación-de-la-masa",
    "title": "Pizzas",
    "section": "",
    "text": "Para encontrar una mejor manera de hacer su pizza favorita, Marcelo se propuso reducir el tiempo que tarda en preparar la masa. Para hacerlo siguió el camino de la ciencia y diseñó un experimento para poner a prueba el efecto de la cantidad de azúcar y de leche en los tiempos de activación de la levadura. En concreto, probó cuatro recetas diferentes y midió cuántos segundos tardaba la misma cantidad de masa en llenar un recipiente hasta una marca que fijo como referencia. Aleatorizó el orden de las recetas y repitió cada tratamiento 4 veces.\n\n\nDescargar los datos en formato de texto simple o Utiliza este vínculo para otenerlo de Google Drive\n\n\nPueden usar instrucciones parecidas a las que siguen para leer los datos en R, directamente desde un documento en la nube de Google Drive.\n\nlibrary(stringr)\nurl_datos &lt;- \"URL de los datos\"\ndat_datos_id &lt;- str_extract(url_datos, \"(?&lt;=d/)(.*)(?=/view)\")\n\nurl_drive &lt;- \"https://docs.google.com/uc?id=%s&export=download\" \ndatos &lt;- read.csv(sprintf(url_drive, dat_datos_id)) \n\n\n\n¿Diseño experimental?\n¿Arreglo de tratamientos?\n¿Modelo que corresponde a este experimento?\n¿Supuestos qe harás para apoyar tu análisis estadístico?\n¿Define tu criterio o nivel de significancia?\nRealiza una exploración de los datos, numérica y gráfica, comenta\nConstruye los modelos necesarios y selecciona el mínimo adecuado\nValora la calidad del modelo, incluyendo el análisis de los residuos\nResuelve que tratamientos difieren de los demás\nArgumenta tus conclusiones\n\n\n\n\n\nCómo lo abordé yo"
  },
  {
    "objectID": "posts/pizzas/index.html#section",
    "href": "posts/pizzas/index.html#section",
    "title": "Pizzas",
    "section": "\n",
    "text": "Experimentaremos con la preparación de un reporte técnico con Quarto. En respuesta a lo que me han preguntado y para averiguar un poco más sobre lo que puede hacerse con esta herramienta les invito a visitar este documento. Les podría interesar tambien este tutorial introductorio. Una guía de referencia a markdown la pueden encontrar aca"
  },
  {
    "objectID": "posts/diapos-ciencia-abierta/index.html",
    "href": "posts/diapos-ciencia-abierta/index.html",
    "title": "Ciencia abierta",
    "section": "",
    "text": "El Pacto del Contribuyente.\nExpone ideas y conceptos que hacen la convivencia grata y productiva.\nEl espíritu de este documento reflexiona sobre lo que estaremos haciendo en este taller."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/index.html#preparación",
    "href": "posts/2022-02-02-prueba-rb-github/index.html#preparación",
    "title": "Publicar desde RStudio",
    "section": "",
    "text": "Desde luego ya debes tener preparado Git en tu máquina y una cuenta en Github. Si requieres realizar estos primeros pasos te sugiero ir a esta contribución.\n\n\n\n\n\n\nSimplemente hay que crear o clonar un repositorio en Github (o algún otro servicio semejante) y asegurarse de trabajar con vinculación a ese repositorio. Esto es muy cómodo hacerlo con Github Desktop. RStudio debería reconocer la configuración en forma automática, incluyendo las credenciales usadas para acceder al repositorio, que habrán sido registradas por Git en la referencia al repositorio base que se suele etiquetar como origin."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/index.html#contribuir-posts-desde-rstudio",
    "href": "posts/2022-02-02-prueba-rb-github/index.html#contribuir-posts-desde-rstudio",
    "title": "Publicar desde RStudio",
    "section": "Contribuir posts desde RStudio",
    "text": "Contribuir posts desde RStudio\n\nEmpezar: crear un folder descriptivo para la nueva contribución y crear en él un documento Quarto con nombre un nombre apropiado, index.qmd es usualmente conveniente.\nEditar: Especificar la sección front matter al inicio del documento y agregar el contenido deseado.\nRender: Para generar la versión de despliegue de la contribución.\ncommit: Desde el menú Git en Rstudio, para registrar el avance en el sistema de control de versiones.\npull: Después de guardar el avance con commit, es buena práctica pedir al sistema descargar posibles cambios del registro remoto.\npush: Para depositar la contribución en el repositorio remoto desde donde Netlify lo tomará y publicará automáticamente.\n\n\nColaboración\nLa forma más segura de interactuar con un repositorio es mediante pull request (solicitud de incorporación). Esta acción es una petición que hace el propietario de una copia del repositorio (fork), al propietario del repositorio original para que incorpore los commits que están en la copia del solicitante. Para ver como hacer preparamos esta contribución al respecto."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/netlify-link.html",
    "href": "posts/2022-02-02-prueba-rb-github/netlify-link.html",
    "title": "Enlazar Github con Netlify para publicar",
    "section": "",
    "text": "Supondré que ya has obtenido tus cuentas de Github y Netlify. En todo caso y por si las dudas estos dos enlaces te deben ayudar.\n\n\n\n\n\n\nEnlaces para registro en Github y Netlify\n\n\n\n\n\nGithub\nNetlify\n\n\n\n\n\n\n\n\n\nYa tenemos un proyecto Quarto en Rstudio, al que podemos agregar la funcionalidad de control de versiones mediante Git. Por otro lado, también podemos iniciar un nuevo proyecto que desde un inicio tenga esta característica, la forma e hacerlo está aquí. Si prefieres el camino de agregar Git a tu proyecto ya existente habrá que habilitarlo. Para saber si está Git habilitado basta con averiguar si tienes la pestaña respectiva en el cuadrante de ambiente de trabajo de RStudio (arriba a la izquierda normalmente)\n\n\n\n\n\n\n\n\n\n\n\n\nAgregar control de versiones a tu proyecto\n\n\n\n\n\n\n\n\n\n\nEs muy probable que por este camino tengas una rama principal llamada master. Aunque no hay ningún inconveniente con esto, actualmente se prefiere usar como rama principal una llamada main. Si esto es lo que prefieres tu también puedes usar el siguiente comando desde la pestaña de consola.\n\nusethis::git_default_branch_rename(from = \"master\", to = \"main\")\n\n\n\n\nAsegúrate de tener instalada la biblioteca usethis\nEjecuta el siguiente comando en R y responde las preguntas que aparecerán en la consola\n\nusethis::use_git()\n\n\n\nLo más sencillo es de nuevo usar la biblioteca de ayuda usethis. En la consola ejecuta el siguiente comando\n\nusethis::use_github()\nLo que ocurre con este comando es lo siguiente:\n\nCrearás un nuevo repositorio en GitHub con el mismo nombre de tu proyecto.\nConfigurarás el nuevo repo como el origin remoto para tu repo local.\nPrepararás una rama local inicial a la que nombrarás main y sobre la que se harás el seguimiento hasta nueva orden.\nSincronizarás lo que tengas en tu máquina con Github.\nAbrirás el nuevo repositorio en el navegador para que puedas ver lo que has hecho.\n\nCasi tan simple como lo que acabamos de hacer es utilizar Google Desktop para crear un repo en tu cuenta, con base en un proyecto de tu máquina. Asegúrate de hacer las tareas 3 y 4 anotadas arriba.\n\nUn último paso sólo para asegurar uun poco más tu espacio de trabajo y colaboración es recurrir al comando siguiente.\nusethis::git_vaccinate()\nCon esta instrucción se revisa el archivo .gitignore global que especifica lo que no conviene, se quiere o debe compartir (claves confidenciales por ejemplo), en un espacio abierto.\nDe ahora en adelante puedes tomar registro de tu avance de trabajo, involucrando todos los directorios de tu proyecto (salvo los que estén en .gitignore), cada vez que lo consideres conveniente (al dar por terminada una tarea propuesta, por ejemplo). También podrás sincronizar este registro con el repositorio que has creado en Github cuando te parezca prudente. Toma nota de que nada de esto ocurrirá automáticamente, deberás generar la indicación cada vez que quieras que ocurra.\nLa rutina de operación con Git se ilustra en la siguiente figura."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/netlify-link.html#preparación",
    "href": "posts/2022-02-02-prueba-rb-github/netlify-link.html#preparación",
    "title": "Enlazar Github con Netlify para publicar",
    "section": "",
    "text": "Supondré que ya has obtenido tus cuentas de Github y Netlify. En todo caso y por si las dudas estos dos enlaces te deben ayudar.\n\n\n\n\n\n\nEnlaces para registro en Github y Netlify\n\n\n\n\n\nGithub\nNetlify\n\n\n\n\n\n\n\n\n\nYa tenemos un proyecto Quarto en Rstudio, al que podemos agregar la funcionalidad de control de versiones mediante Git. Por otro lado, también podemos iniciar un nuevo proyecto que desde un inicio tenga esta característica, la forma e hacerlo está aquí. Si prefieres el camino de agregar Git a tu proyecto ya existente habrá que habilitarlo. Para saber si está Git habilitado basta con averiguar si tienes la pestaña respectiva en el cuadrante de ambiente de trabajo de RStudio (arriba a la izquierda normalmente)\n\n\n\n\n\n\n\n\n\n\n\n\nAgregar control de versiones a tu proyecto\n\n\n\n\n\n\n\n\n\n\nEs muy probable que por este camino tengas una rama principal llamada master. Aunque no hay ningún inconveniente con esto, actualmente se prefiere usar como rama principal una llamada main. Si esto es lo que prefieres tu también puedes usar el siguiente comando desde la pestaña de consola.\n\nusethis::git_default_branch_rename(from = \"master\", to = \"main\")\n\n\n\n\nAsegúrate de tener instalada la biblioteca usethis\nEjecuta el siguiente comando en R y responde las preguntas que aparecerán en la consola\n\nusethis::use_git()\n\n\n\nLo más sencillo es de nuevo usar la biblioteca de ayuda usethis. En la consola ejecuta el siguiente comando\n\nusethis::use_github()\nLo que ocurre con este comando es lo siguiente:\n\nCrearás un nuevo repositorio en GitHub con el mismo nombre de tu proyecto.\nConfigurarás el nuevo repo como el origin remoto para tu repo local.\nPrepararás una rama local inicial a la que nombrarás main y sobre la que se harás el seguimiento hasta nueva orden.\nSincronizarás lo que tengas en tu máquina con Github.\nAbrirás el nuevo repositorio en el navegador para que puedas ver lo que has hecho.\n\nCasi tan simple como lo que acabamos de hacer es utilizar Google Desktop para crear un repo en tu cuenta, con base en un proyecto de tu máquina. Asegúrate de hacer las tareas 3 y 4 anotadas arriba.\n\nUn último paso sólo para asegurar uun poco más tu espacio de trabajo y colaboración es recurrir al comando siguiente.\nusethis::git_vaccinate()\nCon esta instrucción se revisa el archivo .gitignore global que especifica lo que no conviene, se quiere o debe compartir (claves confidenciales por ejemplo), en un espacio abierto.\nDe ahora en adelante puedes tomar registro de tu avance de trabajo, involucrando todos los directorios de tu proyecto (salvo los que estén en .gitignore), cada vez que lo consideres conveniente (al dar por terminada una tarea propuesta, por ejemplo). También podrás sincronizar este registro con el repositorio que has creado en Github cuando te parezca prudente. Toma nota de que nada de esto ocurrirá automáticamente, deberás generar la indicación cada vez que quieras que ocurra.\nLa rutina de operación con Git se ilustra en la siguiente figura."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/netlify-link.html#preparar-github-para-interactuar-con-netlify",
    "href": "posts/2022-02-02-prueba-rb-github/netlify-link.html#preparar-github-para-interactuar-con-netlify",
    "title": "Enlazar Github con Netlify para publicar",
    "section": "Preparar Github para interactuar con Netlify",
    "text": "Preparar Github para interactuar con Netlify\nHay que preparar a Github para que de acceso a Netlify para tomar lo necesario para construir el servicio web que deseas y publicarlo en Internet. Los pasos que hay que seguir para esta primera interacción son los que se ilustran en estas figuras.\nIniciar la vinculación con Github seleccionando la opción qe ofrece importar los documentos desde n repo Git. Esto dará la opción de utilizar Github como origen de datos, entre otras posibilidades.\n\nEl Siguiente paso es autorizar a Netlify a acceder a Github a través de tu cuenta, así como los específicos del repositorio que te interesa vincular. Esto también implica instalar una aplicación de vínculo entre Netlify Github dentro de tu cuenta.\n\nSi todo ocurrió sin problemas, tendrás ahora en Github, en el menú de aplicaciones (Avatar→ Settings→ Applications), un botón que te permitirá configurar el vínculo con Netlify según tus requerimientos. También podrás ver los repos que hayas autorizado desde Netlify."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/netlify-link.html#creación-de-un-nuevo-sitio-a-pblicar",
    "href": "posts/2022-02-02-prueba-rb-github/netlify-link.html#creación-de-un-nuevo-sitio-a-pblicar",
    "title": "Enlazar Github con Netlify para publicar",
    "section": "Creación de un nuevo sitio a pblicar",
    "text": "Creación de un nuevo sitio a pblicar\n\nEn Netlify:\n\nDesde la opción team o site puedes generar un nuevo sitio.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSeleccionar el origen de los documentos en Github.\nSeleccionar la carpeta que habrá que estar vigilando para genera el sitio.\nEspecificar el nombre que tendrá el sitio web que se publicará. Si no dispones de un nombre de dominio de tu propiedad, el sitio será parte del dominio netlify.app, pero tampoco te costará nada publicar ni el espacio de almacenamiento que uses.\n\n\nEn Github - En la configuración de aplicaciones, conceder acceso a Netlify al repositorio que te interesa sea la fuente de documentos para publicar."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/netlify-link.html#creación-de-un-nuevo-sitio-a-publicar",
    "href": "posts/2022-02-02-prueba-rb-github/netlify-link.html#creación-de-un-nuevo-sitio-a-publicar",
    "title": "Enlazar Github con Netlify para publicar",
    "section": "Creación de un nuevo sitio a publicar",
    "text": "Creación de un nuevo sitio a publicar\n\nEn Netlify:\n\nDesde la opción team o site puedes generar un nuevo sitio.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCuando aprietas el boton de añadir sitio, aparecerá una nueva pantalla que tiene tres secciones. Se trata de los atributos que tendrás que proporcionar para darle presencia en Internet a tu proyecto y algunos otros atributos que definen como se producirá y actualizará continuamente. Estas operaciones es poco probable que las vuelvas a ver, una vez que tu proyecto esté en producción, aunque desde luego estarán siempre ahí por si deseas hacer ajustes.\n\n¿Qué nombre le daras?\nDeberás elegir un nombre que se convertirá en una URL para acceder a tu proyecto. Puede ser cualquier cosa que desees, pero debe ser único. En esta sección puedes escribir nombres y verificar que estén disponibles\n\n\n\n¿Qué hará Netlify para operar tu sitio?\nEs una colección de atributos para indicarle a Netlify dónde conseguir los documentos y como manejarlos. En nuestro caso, muy simple, básicamente hay que decirle en donde están los documentos que Quarto, con ayuda de pandoc, a renderizado. Si no has cambiado nada en _quarto.yml la rama que estamos usando aquí para que Git los registre es main y, en ella el directorio de producción se llama **_site**. Por favor verifica el contenido de esto para ayudarte a comprender mejor lo que estás haciendo.\n\n\n\n¿Todo listo? ¡a prodcción!\nEn nuestro caso no hay más que hacer, Netlify tiene información suficiente para encargarse de publicar tu proyecto continuamente, incorporando los cambios que hagas en RStudio en la rama principal. Lo hará automáticamente cada vez que envíes tus cambios a Github.\n\nSi todo salió bien, en este momento ya debe estar tu proyecto publicado y accesible para cualquier lector del mundo que lo localice y se interese en su contenido."
  },
  {
    "objectID": "posts/2022-02-02-prueba-rb-github/primeros-pasos.html#algunos-problemas-que-se-nos-presentaron.",
    "href": "posts/2022-02-02-prueba-rb-github/primeros-pasos.html#algunos-problemas-que-se-nos-presentaron.",
    "title": "Primeros pasos con Git",
    "section": "Algunos problemas que se nos presentaron.",
    "text": "Algunos problemas que se nos presentaron.\n\nGit no instalado. Esperábamos que la instalación de Github desktop instalara Git en una sola operación. Por alguna razón esto no fue así.\nRecurrimos a Git for Windows y lo instalamos directamente.\nDatos de usuario de Git no registrado. Lo resolvimos con Git bash, que es una consola de comandos para operar el equipo que está vinculado con la instalación de Git.\n\ngit config --global user.name \"Mona Lisa\"\n\ngit config --global user.email \"YOUR_EMAIL\"\nVerificar que tus datos quedaron registrados:\ngit config --global user.name\n\ngit config --global user.email\n\nAcceso a Github pide registrar un token en el equipo. Lo resolvimos con ayuda de la biblioteca usethis Los comandos que ejecutamos en la pestaña de consola fueron:\n\nusethis::create_github_token()\nEsto lleva a la página de Github en la que hay que generar el token. Hay que responder las preguntas que te haga la página y apretar el botón respectivo. Aparecerá una nueva pantalla con el token que habrá que copiar al portapapeles (ctr-c en windows). En seguida hay que ejecutar este otro comando en la consola de RStudio\ngitcreds::gitcreds_set()\n\nLa operación de Netlify parecía no funcionar correctamente. Encontramos que el proyecto en RStudio no estaba completamente renderizado. Lo resolvimos activando Render website en la pestaña Build de RStudio.\nUna manera de averiguar muchos detalles esenciales de tu proyecto es usar el siguiente comando. Producirá un reporte un poco largo. De particular interés es la sección ── Active usethis project. También será oportunidad de verificar que estes vacunado (evita en lo posible distribuir información confidencial, entre otras cosas).\n\nusethis::git_sitrep()\nSi no estas vacunado, conviene que lo hagas. Puedes encontrar más información al respecto con ? git_vaccinate o yendo a la pestaña de ayuda y buscando el comando.\n\nusethis::git_vaccinate()"
  }
]